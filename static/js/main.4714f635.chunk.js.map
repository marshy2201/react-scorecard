{"version":3,"sources":["components/Stats.js","components/Stopwatch.js","components/Header.js","components/Counter.js","components/Icon.js","components/Player.js","components/AddPlayerForm.js","components/App.js","index.js"],"names":["Stats","players","totalPlayers","length","totalPoints","reduce","total","player","score","className","Stopwatch","state","isRunning","elapsedTime","previousTime","tick","now","Date","setState","prevState","handleStopwatch","handleRest","this","intervalID","setInterval","clearInterval","seconds","Math","floor","onClick","Component","Header","title","defaultProps","Counter","index","changeScore","Svg","highScoreClass","isHighScore","viewBox","d","transform","width","height","Player","props","name","id","removePlayer","Icon","PureComponent","AddPlayerForm","addPlayer","playerInput","React","createRef","onSubmit","e","preventDefault","current","value","currentTarget","reset","type","placeholder","ref","App","prevPlayerId","handleScoreChange","delta","updatedPlayers","updatedPlayer","handleAddPlayer","handleRemovePlayer","filter","scores","map","highestScore","max","key","toString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4714f635.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Stats = ({ players }) => {\r\n  const totalPlayers = players.length;\r\n  const totalPoints = players.reduce((total, player) => total + player.score, 0);\r\n\r\n  return (\r\n    <table className=\"stats\">\r\n      <tbody>\r\n        <tr>\r\n          <td>Players:</td>\r\n          <td>{ totalPlayers }</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Total Points:</td>\r\n          <td>{ totalPoints }</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nStats.propTypes = {\r\n  players: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default Stats;","import React, { Component } from 'react';\r\n\r\nclass Stopwatch extends Component {\r\n  state = {\r\n    isRunning: false,\r\n    elapsedTime: 0,\r\n    previousTime: 0\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.intervalID = setInterval(() => this.tick(), 100);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalID);\r\n  }\r\n\r\n  tick = () => {\r\n    if (this.state.isRunning) {\r\n      const now = Date.now();\r\n\r\n      this.setState(prevState => ({\r\n        previousTime: now,\r\n        elapsedTime: prevState.elapsedTime + (now - prevState.previousTime)\r\n      }));\r\n    }\r\n  }\r\n\r\n  handleStopwatch = () => {\r\n    this.setState(prevState => ({\r\n      isRunning: !prevState.isRunning\r\n    }));\r\n    \r\n    if (!this.state.isRunning) {\r\n      this.setState({ previousTime: Date.now() });\r\n    }\r\n  }\r\n\r\n  handleRest = () => {\r\n    this.setState({ elapsedTime: 0 });\r\n  }\r\n\r\n  render() {\r\n    const seconds = Math.floor(this.state.elapsedTime / 1000);\r\n\r\n    return (\r\n      <div className=\"stopwatch\">\r\n        <h2>Stopwatch</h2>\r\n        <span className=\"stopwatch-time\">{seconds}</span>\r\n        <button onClick={this.handleStopwatch}>\r\n          {this.state.isRunning ? \"Stop\" : \"Start\"}\r\n        </button> \r\n        <button onClick={this.handleRest}>Reset</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stopwatch;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Stats from './Stats';\r\nimport Stopwatch from './Stopwatch';\r\n\r\nconst Header = ({ players, title }) => {\r\n  return (\r\n    <header>\r\n      <Stats players={players} />\r\n      <h1>{ title }</h1>\r\n      <Stopwatch />\r\n    </header>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n  players: PropTypes.arrayOf(PropTypes.shape({\r\n    score: PropTypes.number\r\n  }))\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: 'Scorecard'\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Counter = ({ index, score, changeScore }) => {\r\n  return (\r\n    <div className=\"counter\">\r\n      <button className=\"counter-action decrement\" onClick={() => changeScore(index, -1)}> - </button>\r\n      <span className=\"counter-score\">{ score }</span>\r\n      <button className=\"counter-action increment\" onClick={() => changeScore(index, 1)}> + </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nCounter.propTypes = {\r\n  score: PropTypes.number,\r\n  index: PropTypes.number,\r\n  changeScore: PropTypes.func\r\n}\r\n\r\nexport default Counter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Svg = ({ isHighScore }) => {\r\n  const highScoreClass = isHighScore ? \"is-high-score\" : \"\";\r\n\r\n  return (\r\n    <svg viewBox=\"0 0 44 35\" className={highScoreClass}>\r\n      <path d=\"M26.7616 10.6207L21.8192 0L16.9973 10.5603C15.3699 14.1207 10.9096 15.2672 7.77534 12.9741L0 7.24138L6.56986 28.8448H37.0685L43.5781 7.72414L35.7425 13.0948C32.6685 15.2672 28.3288 14.0603 26.7616 10.6207Z\" transform=\"translate(0 0.301727)\"/>\r\n      <rect width=\"30.4986\" height=\"3.07759\" transform=\"translate(6.56987 31.5603)\"/>\r\n    </svg>\r\n  );\r\n}\r\n\r\nSvg.propTypes = {\r\n  isHighScore: PropTypes.bool\r\n}\r\n\r\nexport default Svg;","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Counter from './Counter';\r\nimport Icon from './Icon';\r\n\r\nclass Player extends PureComponent {\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n    score: PropTypes.number,\r\n    index: PropTypes.number,\r\n    removePlayer: PropTypes.func,\r\n    changeScore: PropTypes.func,\r\n    isHighScore: PropTypes.bool\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      index,\r\n      score,\r\n      changeScore,\r\n      id,\r\n      removePlayer,\r\n      isHighScore\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"player\">\r\n        <span className=\"player-name\">\r\n          <button className=\"remove-player\" onClick={() => removePlayer(id)}>âœ–</button>\r\n          <Icon isHighScore={isHighScore} />\r\n          { name }\r\n        </span>\r\n\r\n        <Counter \r\n          score={score} \r\n          changeScore={changeScore}\r\n          index={index}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddPlayerForm = ({ addPlayer }) => {\r\n  const playerInput = React.createRef();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addPlayer(playerInput.current.value);\r\n    e.currentTarget.reset();\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Enter a players name\" \r\n        ref={playerInput}\r\n      />\r\n\r\n      <input type=\"submit\" value=\"Add Player\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nAddPlayerForm.propTypes = {\r\n  addPlayer: PropTypes.func\r\n}\r\n\r\nexport default AddPlayerForm;\r\n\r\n\r\n/***** Using state instead of ref for the input *****/\r\n\r\n// import React, { Component } from 'react';\r\n\r\n// class AddPlayerForm extends Component {\r\n//   state = {\r\n//     value: ''\r\n//   }\r\n\r\n//   handleValueChange = (e) => {\r\n//     this.setState({ value: e.target.value });\r\n//   }\r\n\r\n//   handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     this.props.addPlayer(this.state.value);\r\n//     this.setState({ value: '' });\r\n//   }\r\n\r\n//   render() {\r\n//     const { value } = this.state;\r\n\r\n//     return (\r\n//       <form onSubmit={this.handleSubmit}>\r\n//         <input \r\n//           type=\"text\" \r\n//           placeholder=\"Enter a players name\" \r\n//           value={value} \r\n//           onChange={this.handleValueChange}\r\n//         />\r\n\r\n//         <input type=\"submit\" value=\"Add Player\" />\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default AddPlayerForm;","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport Player from './Player';\r\nimport AddPlayerForm from './AddPlayerForm';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    players: [\r\n      {\r\n        name: \"Guil\",\r\n        score: 0,\r\n        id: 1\r\n      },\r\n      {\r\n        name: \"Treasure\",\r\n        score: 0,\r\n        id: 2\r\n      },\r\n      {\r\n        name: \"Ashley\",\r\n        score: 0,\r\n        id: 3\r\n      },\r\n      {\r\n        name: \"James\",\r\n        score: 0,\r\n        id: 4\r\n      }\r\n    ]\r\n  }\r\n\r\n  // prev player id\r\n  prevPlayerId = 4;\r\n\r\n  highestScore() {\r\n    const scores = this.state.players.map(player => player.score);\r\n    const highestScore = Math.max(...scores);\r\n    \r\n    if (highestScore) {\r\n      return highestScore;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  handleScoreChange = (index, delta) => {\r\n    this.setState(prevState => {\r\n      // New 'players' array â€“ a copy of the previous `players` state\r\n      const updatedPlayers = [...prevState.players];\r\n      // A copy of the player object we're targeting\r\n      const updatedPlayer = { ...updatedPlayers[index] };\r\n\r\n      // Update the target player's score\r\n      updatedPlayer.score += delta;\r\n      // Update the 'players' array with the target player's latest score\r\n      updatedPlayers[index] = updatedPlayer;\r\n\r\n      // Update the `players` state without mutating the original state\r\n      return {\r\n        players: updatedPlayers\r\n      }\r\n    });\r\n  }\r\n\r\n  handleAddPlayer = (name) => {\r\n    this.setState(prevState => ({\r\n      players: [\r\n        ...prevState.players,\r\n        {\r\n          name,\r\n          score: 0,\r\n          id: this.prevPlayerId += 1\r\n        }\r\n      ]\r\n    }));\r\n  }\r\n\r\n  handleRemovePlayer = (id) => {\r\n    this.setState(prevState => ({\r\n      players: prevState.players.filter(player => player.id !== id)\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const { players } = this.state;\r\n\r\n    return (\r\n      <div className=\"scoreboard\">\r\n        <Header players={players} />\r\n  \r\n        {/* Players */}\r\n        {players.map((player, index) => (\r\n          <Player  \r\n            name={player.name} \r\n            key={player.id.toString()}\r\n            id={player.id}\r\n            score={player.score}\r\n            index={index}\r\n            removePlayer={this.handleRemovePlayer}\r\n            changeScore={this.handleScoreChange}\r\n            isHighScore={player.score === this.highestScore()}\r\n          />\r\n        ))}\r\n        <AddPlayerForm addPlayer={this.handleAddPlayer}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}